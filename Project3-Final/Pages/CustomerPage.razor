@* Main page for list of customers
    It displays a table and creates rows from List<Customers> customers found in the file Services.CustomerServices.cs
    Each row will have a end button that will pass the specific Customer instance for that row to the EditCustomer page

    Date: 27 April 2023
    By: John Holloway
*@

@page "/customer"

@using Project3_Final.Services;
@using Project3_Final.Models;

@inject NavigationManager navHelper

<h1>Customers</h1>

<btn class="btn btn-primary" @onclick="() => NewCustomer()">New Customer</btn>

<table class="table">
    <thead>
        <tr>
            <th>First name</th>
            <th>Last name</th>
            <th>Phone number</th>
            <th>Email</th>
            <th>Birthday</th>
            <th>Membership Type</th>
            <th>Account Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Customer customer in CustomerServices.customers)
        {
          
               <tr>
                <td>@customer.FirstName</td>
                <td>@customer.LastName</td>
                <td>@String.Format("{0:(###) ###-####}", long.Parse(customer.PhoneNumber))</td>
                <td>@customer.Email</td>
                <td>@customer.DateOfBirth.ToString("yyyy-MM-dd")</td>
                <td>@customer.MembershipType</td>
                <td>@customer.AccountStatus</td>
                <button class="btn-outline-primary" @onclick="() => LoadEditPage(customer)">Edit</button>
            </tr>
        }

    </tbody>

</table>

@code {
    

    internal void LoadEditPage(Customer customerToEdit)
    {
        EditCustomer.customerToEdit = customerToEdit;
        navHelper.NavigateTo("editCustomer");
    }

    internal void NewCustomer()
    {
        navHelper.NavigateTo("newcustomer");
    }

}
