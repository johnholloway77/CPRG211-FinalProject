@page "/editCustomer"
@using Project3_Final.Services;
@using Project3_Final.Models;
@using Microsoft.AspNetCore.Components.Forms

@inject NavigationManager navHelper


<body>
<h3>Edit Customer</h3>


<table class="table">
    <thead>
        <tr>
            <th>Field</th>
            <th>Value</th>
        </tr>
    </thead>
    <tbody>
        
        <tr>
            <td>First name</td>
            <td><input type="text" @bind="@customerToEdit.FirstName"/></td>
            
        </tr>
        <tr>
            <td>Last name</td>
                <td><input type="text" @bind="@customerToEdit.LastName"/></td>
        </tr>
        <tr>
            <td>Phone Number</td>
                <td><input type="text"  @bind="@customerToEdit.PhoneNumber" maxlength="10"/></td>
        </tr>
        <tr>
            <td>Email</td>
                <td><input type="email" @bind="@customerToEdit.Email" /></td>
        </tr>
        <tr>
            <td>Birthday</td>
                <td><InputDate @bind-Value="@customerToEdit.DateOfBirth" /></td>
        </tr>
        <tr>
            <td>Membership Type</td>
            <td>
                <InputSelect @bind-Value="@customerToEdit.MembershipType">
                    <option value="Annual">Annual</option>
                    <option value="Monthly">Monthly</option>
                    <option value="Trial">30-Day - Trial</option>
                </InputSelect>
            </td>
        </tr>
        <tr>
            <td>Account Status</td>
                <td>
                <InputSelect @bind-Value="@customerToEdit.AccountStatus">
                    <option value=true>Active</option>
                    <option value=false>Inactive</option>
                </InputSelect>
                </td>
        </tr>
    </tbody>
</table>

<br />
<btn class="btn btn-primary" @onclick="dataValidation">Update</btn>&nbsp&nbsp&nbsp
<btn class="btn btn-primary" @onclick="() => Cancle()">Cancle</btn>


</body>

@code {
    public static Customer? customerToEdit;


    //validate that fields are entered to update customer.
    private void dataValidation()
    {
        bool validCustomer = true;
        long x;
        string alertMessage = "";

        if (string.IsNullOrWhiteSpace(customerToEdit.FirstName))
        {
            validCustomer = false;
            alertMessage += "Firstname Required";
        }
        if (string.IsNullOrWhiteSpace(customerToEdit.LastName))
        {
            validCustomer = false;
            alertMessage += "\nLastname Required";
        }
        if (string.IsNullOrWhiteSpace(customerToEdit.PhoneNumber))
        {
            validCustomer = false;
            alertMessage += "\nPhone number required.";
        }
        if(customerToEdit.PhoneNumber.Length < 10)
        {
            validCustomer = false;
            alertMessage += "\nPhone number must contain 10 digits";
        }
        if (!long.TryParse(customerToEdit.PhoneNumber, out x))
        {
            validCustomer = false;
            alertMessage += "\nPhone number can only contain numerical values";
        }
        if (string.IsNullOrWhiteSpace(customerToEdit.Email))
        {
            validCustomer = false;
            alertMessage += "\nEmail address required.";
        }


        if (validCustomer)
        {
            updateCustomer();
        }
        else
        {
            Application.Current.MainPage.DisplayAlert("Error, cannot update customer", alertMessage, "Okay");
        }
    }

    private void updateCustomer()
    {        

        Services.CustomerServices.UpdateRecord(customerToEdit.CustID, customerToEdit.FirstName, customerToEdit.LastName, customerToEdit.PhoneNumber, customerToEdit.Email, customerToEdit.DateOfBirth, customerToEdit.MembershipType, customerToEdit.AccountStatus);

        Application.Current.MainPage.DisplayAlert("Note:", $"Customer record updated for {customerToEdit.FirstName} {customerToEdit.LastName}", "Okay");

        Services.CustomerServices.LoadFromDatabase();
        navHelper.NavigateTo("customer");
    }

    private void Cancle()
    {
        Services.CustomerServices.LoadFromDatabase();
        navHelper.NavigateTo("customer");
    }
}

