@page "/newstaff"

@using Project3_Final.Services;
@using Project3_Final.Models;

@inject NavigationManager navHelper
<h3>Create New Staff Member</h3>



<table class="table">
    <thead>
        <tr>
            <th>Field</th>
            <th>Value</th>
        </tr>
    </thead>
    <tbody>

        <tr>
            <td>First name</td>
            <td><input type="text" @bind="@firstName" /></td>

        </tr>
        <tr>
            <td>Last name</td>
            <td><input type="text" @bind="@lastName" /></td>
        </tr>
        <tr>
            <td>Phone Number</td>
            <td><input type="text" @bind="@phoneNumber" maxlength="10" /></td>
        </tr>
        <tr>
            <td>Email</td>
            <td><input type="email" @bind="@email" /></td>
        </tr>
        <tr>
            <td>Salary</td>
            <td><InputNumber @bind-Value="@salary" /></td>
        </tr>
        <tr>
            <td>Gym Location</td>
            <td>
                <InputSelect @bind-Value="@gymID">
                    @foreach (Gym gym in Services.GymService.gyms)
                    {
                        <option value=@gym.GymID>@gym.Street @gym.City</option>
                    }
                </InputSelect>
            </td>
        </tr>
        <tr>
            <td>Position</td>
            <td><InputText @bind-Value="@position" /></td>
        </tr>

        <tr>
            <td>Employment Status</td>
            <td>
                <InputSelect @bind-Value="@accountStatus">
                    <option value=true>Active</option>
                    <option value=false>Inactive</option>
                </InputSelect>
            </td>
        </tr>
    </tbody>
</table>

<br />
<btn class="btn btn-primary" @onclick="dataValidation">Create</btn>&nbsp&nbsp&nbsp
<btn class="btn btn-primary" @onclick="() => Cancle()">Cancle</btn>




@code {
    private int staffID = Services.StaffServices.staffs.Count + 1;
    private int gymID = 1;
    private string firstName;
    private string lastName;
    private string phoneNumber;
    private string email;
    private int salary;
    private string position;
    private bool accountStatus = true;


    //validate that fields are entered to update Staff member.
    internal void dataValidation()
    {
        bool validStaff = true;
        long x;
        int y;
        string alertMessage = "";

        if (string.IsNullOrWhiteSpace(firstName))
        {
            validStaff = false;
            alertMessage += "Firstname Required";
        }
        if (string.IsNullOrWhiteSpace(lastName))
        {
            validStaff = false;
            alertMessage += "\nLastname Required";
        }
        if (string.IsNullOrWhiteSpace(phoneNumber))
        {
            validStaff = false;
            alertMessage += "\nPhone number required.";
        }
        if (phoneNumber.Length < 10)
        {
            validStaff = false;
            alertMessage += "\nPhone number must contain 10 digits";
        }
        if (!long.TryParse(phoneNumber, out x))
        {
            validStaff = false;
            alertMessage += "\nPhone number can only contain numerical values";
        }
        if (string.IsNullOrWhiteSpace(email))
        {
            validStaff = false;
            alertMessage += "\nEmail address required.";
        }
        if (salary == null)
        {
            validStaff = false;
            alertMessage += "\nSalary required.";
        }

        if (string.IsNullOrWhiteSpace(position))
        {
            validStaff = false;
            alertMessage += "\nPosition required.";
        }
        if (validStaff)
        {
            CreateStaff();
        }
        else
        {
            Application.Current.MainPage.DisplayAlert("Error, cannot update staff member", alertMessage, "Okay");
        }
    }

    internal void CreateStaff()
    {
        Services.StaffServices.AddToDatabase(staffID, gymID, firstName, lastName, phoneNumber, email, salary, position, accountStatus);
        Application.Current.MainPage.DisplayAlert("Success!", $"Customer record added for {firstName} {lastName}", "Okay");
        
        Services.StaffServices.LoadFromDatabase();
        navHelper.NavigateTo("staff");
    }


    internal void Cancle()
    {
        Services.StaffServices.LoadFromDatabase();
        navHelper.NavigateTo("staff");
    }
}
